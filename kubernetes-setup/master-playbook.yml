---
- hosts: all
  become: true
  tasks:

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - make
      - gcc
      - jq
      # QEMU deps
      - git
      - libglib2.0-dev
      - libfdt-dev
      - libpixman-1-dev
      - zlib1g-dev


  - name: Install go
    command: snap install go --classic

  - name: Adds apt signing key for Kubic
    apt_key:
      url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key
      state: present

  - name: Add Kubic repository
    command: |
      sh -c "echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce-cli=5:19.03.14~3-0~ubuntu-xenial
      - containerd
      - runc
      - containers-common

  - name: Ensure group docker exists
    ansible.builtin.group:
      name: docker
      state: present

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Get containerd conf
    get_url:
      url: https://raw.githubusercontent.com/containerd/containerd/master/containerd.service
      dest: /etc/systemd/system/containerd.service
      mode: '0755'

  - name: Create containerd folder /etc/containerd
    file: path=/etc/containerd state=directory

  #- name: Get containerd conf for Kata Containers
  #  get_url:
  #    url: https://raw.githubusercontent.com/markkuleppala/disco/main/config.toml
  #    dest: /etc/containerd/config.toml
  #    mode: '0755'

  - name: iptables conf
    get_url:
      url: https://raw.githubusercontent.com/markkuleppala/disco/master/k8s.conf
      dest: /etc/sysctl.d/k8s.conf
      mode: '0755'

  - name: Reload config
    ansible.builtin.shell: sysctl --system

  - name: IP forward config
    ansible.builtin.shell: |
      echo '1' > /proc/sys/net/ipv4/ip_forward
      iptables -P FORWARD ACCEPT
      systemctl enable containerd
      systemctl start containerd
      systemctl --system

  - name: Kernel settings
    ansible.builtin.shell: |
      modprobe overlay
      modprobe br_netfilter

  - name: Hosts file
    ansible.builtin.lineinfile:
      path: /etc/hosts
      line: 10.0.50.10 k8s-master

  #- name: Create the systemd docker options configuration file
  #  template: src=docker.service.j2 dest=/usr/lib/systemd/system/docker.service

  - name: Systemd reread configs and restart
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Remove swapfile from /etc/fstab
    mount:  
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: kubelet service conf
    get_url:
      url: https://raw.githubusercontent.com/markkuleppala/disco/master/0-containerd.conf
      dest: /etc/systemd/system/kubelet.service.d/0-containerd.conf
      mode: '0755'

  - name: Get registries conf
    get_url:
      url: https://raw.githubusercontent.com/markkuleppala/disco/main/registries.conf
      dest: /etc/containers/registries.conf
      mode: '0755'

  #- name: Install Kata Containers
  #  command: snap install kata-containers --classic --candidate

  #- name: Create Kata Containers conf
  #  ansible.builtin.shell: |
  #    mkdir -p /etc/kata-containers
  #    cp /snap/kata-containers/current/usr/share/defaults/kata-containers/configuration.toml /etc/kata-containers/
  #    ln -sf /snap/kata-containers/current/usr/bin/containerd-shim-kata-v2 /usr/local/bin/containerd-shim-kata-v2

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Enable services
    ansible.builtin.shell: |
      systemctl daemon-reload
      systemctl enable containerd && systemctl start containerd
      systemctl enable kubelet && systemctl start kubelet

  - name: Pull images
    ansible.builtin.shell: kubeadm config images pull

  - name: Initialize the Kubernetes cluster using kubeadm
    ansible.builtin.shell: kubeadm init --pod-network-cidr=10.0.0.0/16 --apiserver-advertise-address=10.0.50.10 --cri-socket=/var/run/containerd/containerd.sock

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /home/vagrant/.kube
      state: directory
      owner: vagrant
      group: vagrant
      mode: '0777'

  - name: Setup kubeconfig for vagrant user
    ansible.builtin.shell: cp -f /etc/kubernetes/admin.conf /home/vagrant/.kube/config

  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: '0777'

  - name: Deploy network
    ansible.builtin.shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    become: false

  - name: Untaint master
    ansible.builtin.shell: kubectl taint nodes --all node-role.kubernetes.io/master-
    become: false
