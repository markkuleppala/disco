---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - make
      - gcc
      - conmon
      - jq

  - name: Install go
    command: snap install go --classic

  - name: Create a symbolic link for conmon
    ansible.builtin.file:
      src: /usr/libexec/podman/conmon
      dest: /usr/bin/conmon
      owner: vagrant
      group: vagrant
      state: link

  - name: Add Kubic repository
    command: |
      sh -c "echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"
      wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key -O Release.key
      apt-key add - < Release.key
      apt-get update -qq

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce-cli=5:19.03.14~3-0~ubuntu-xenial
      - docker-ce=5:19.03.14~3-0~ubuntu-xenial
      - containers-common
    notify:
      - docker status

  - name: Ensure group docker exists
    ansible.builtin.group:
      name: docker
      state: present

  - name: Create the systemd docker options configuration file
    template: src=docker.service.j2 dest=/usr/lib/systemd/system/docker.service

  - name: Systemd reread configs and restart
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Restart docker
    service:
      name: docker
      daemon_reload: yes
      state: restarted

  - meta: flush_handlers

  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl


  - name: Get CRI-O
    git:
      repo: https://github.com/cri-o/cri-o.git
      dest: $HOME/cri-o
      version: release-1.20
    become: false

  - name: Install CRI-O
    ansible.builtin.shell: |
      make BUILDTAGS=""
      make install
    #  make install.config
    args:
      chdir: cri-o/
      #MAJOR=`kubectl version --output json | jq ".clientVersion.major | tonumber"`
      #MINOR=`kubectl version --output json | jq ".clientVersion.minor | tonumber"`
      #git checkout release-$MAJOR.$MINOR

  - name: Install Kata Containers
    command: snap install kata-containers --classic --candidate

  - name: Get CRIO-O conf
    get_url:
      url: https://raw.githubusercontent.com/markkuleppala/disco/main/crio.conf
      dest: /etc/crio/crio.conf
      mode: '0755'

  - name: Reload CRIO-O conf
    command: systemctl restart crio
  
  - name: Reload daemon
    command: systemctl daemon-reload

  - name: Enable CRI-O service
    command: systemctl enable crio

  - name: Start CRI-O service
    command: systemctl start crio

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /var/lib/kubelet
      state: directory
      mode: '0755'

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  handlers:
    - name: docker status
      service: name=docker state=started
